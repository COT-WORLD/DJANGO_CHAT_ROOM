on: [push, pull_request]
jobs:
  CI:
    environment:
      name: Testing
    env:
      EXTERNAL_DATABASE_URL: ${{ secrets.EXTERNAL_DATABASE_URL }}
      EXTERNAL_DATABASE_TEST_URL: ${{ secrets.EXTERNAL_DATABASE_TEST_URL }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      DEBUG: ${{ secrets.DEBUG }}
      DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      DJANGO_SUPER_USER_USERNAME: ${{ secrets.DJANGO_SUPER_USER_USERNAME }}
      DJANGO_SUPER_USER_EMAIL: ${{ secrets.DJANGO_SUPER_USER_EMAIL }}
      DJANGO_SUPER_USER_PASSWORD: ${{ secrets.DJANGO_SUPER_USER_PASSWORD }}
      CLOUDINARY_NAME: ${{ secrets.CLOUDINARY_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: List repository files
        run: |
          ls ${{ github.workspace }}
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: Change directory
        run: cd chat_room
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: Convert static asset files
        run: python manage.py collectstatic --no-input
      - name: Apply any outstanding database migrations
        run: python manage.py migrate
      - name: Running all the tests
        run: pytest -v -x chat/tests/

  # CD:
  #   runs-on: ubuntu-latest
  #   needs: [CI]
  #   environment:
  #     name: Production
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: deployment on Render
  #       uses: sws2apps/render-deployment@main 
  #       with:
  #         serviceId: ${{ secrets.RENDER_SERVICE_ID }}
  #         apiKey: ${{ secrets.RENDER_API_KEY }}
  #         multipleDeployment: false
